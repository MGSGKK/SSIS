Stored Procedures In SQL Server
	Stored Procedures are a Set SQL Statements. Which Can be Used to implemement any Kind of Logic With the Help Any Kind Sub languages.
	These Stored Procedures We can Use them in No Of Ways.Stored Procedures Can Accept Input and OutPut Parameters
Benefits of using a stored procedure:
	It can be easily modified:
		We can easily modify the code inside the stored procedure without the need to restart or deploying the application. For example, If the T-SQL 	queries are written in the application and if we need to change the logic, we must change the code in the application and re-deploy it. SQL Server Stored 	procedures eliminate such challenges by storing the code in the database. so, when we want to change the logic inside the procedure we can just do it by simple ALTER PROCEDURE statement.
	Reduced network traffic: 
		When we use stored procedures instead of writing T-SQL queries at the application level, only the procedure name is passed over the network instead of the whole T-SQL code.
	Reusable: 
		Stored procedures can be executed by multiple users or multiple client applications without the need of writing the code again.
	Performance: 
		The SQL Server stored procedure when executed for the first time creates a plan and stores it in the buffer pool so that the plan can be reused when it executes next time.
		
	
Types OF Stored Procedures:
			1) System Stored Procedures
				These stored procedures are already defined in SQL Server. These are physically stored in hidden SQL Server Resource Database and logically appear in the sys schema of each user-defined and system-defined database. This procedure starts with the sp_prefix. Hence we don't use this prefix when naming user-defined procedures. Here is a list of some useful system defined procedure.
			Examples:
				sp_rename
				sp_help 
				sp_tables
				sp_columns
				sp_helptext
				sp_depends
			2) User Defined Stored Procedures
				These procedures are created by the user for own actions. These can be created in all system databases except the Resource database or in a user-defined database.
Types Of Parameters:
			1) Input 
			2) OutPut
			3) Table Valued Parameters (TVPs)
Syntax:
CREATE [ OR ALTER ] { PROC | PROCEDURE }
    [schema_name.] procedure_name [ ; number ]
    [ { @parameter_name [ type_schema_name. ] data_type }
        [ VARYING ] [ = default ] [ OUT | OUTPUT | [READONLY]
    ] [ ,...n ]
[ WITH <procedure_option> [ ,...n ] ]
[ FOR REPLICATION ]
AS { [ BEGIN ] sql_statement [;] [ ...n ] [ END ] }
[;]

<procedure_option> ::=
    [ ENCRYPTION ]
    [ RECOMPILE ]
    [ EXECUTE AS Clause ]
	